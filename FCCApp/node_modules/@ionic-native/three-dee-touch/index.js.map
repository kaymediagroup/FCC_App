{"version":3,"sources":["../../../src/@ionic-native/plugins/three-dee-touch/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AA0D7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+DG;AASH,IAAa,aAAa;IAAS,iCAAiB;IAApD;;IAqEA,CAAC;IAnEC;;;OAGG;IAEH,mCAAW,GAAX,cAAkC,MAAM,CAAC,CAAC,CAAC;IAE3C;;;OAGG;IAIH,yCAAiB,GAAjB,cAA2D,MAAM,CAAC,CAAC,CAAC;IAEpE;;;;;;;OAOG;IAIH,6CAAqB,GAArB,UAAsB,YAA6C,IAAU,CAAC;IAE9E;;;OAGG;IACH,yCAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,UAAU,CAAC,UAAA,QAAQ;YAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,aAAa,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACnD,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IAIH,yCAAiB,GAAjB,cAA4B,CAAC;IAE7B;;OAEG;IAIH,0CAAkB,GAAlB,cAA6B,CAAC;IAQhC,oBAAC;AAAD,CArEA,AAqEC,CArEkC,iBAAiB,GAqEnD;AANM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AA7DA;IADC,OAAO,EAAE;;;;gDACiC;AAS3C;IAHC,OAAO,CAAC;QACP,UAAU,EAAE,IAAI;KACjB,CAAC;;;oCACmB,UAAU;sDAAqC;AAapE;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;qCACkC,KAAK;;0DAAqC;AAwB9E;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;sDAC2B;AAQ7B;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;uDAC4B;AA7DnB,aAAa;IARzB,MAAM,CAAC;QACN,UAAU,EAAE,eAAe;QAC3B,MAAM,EAAE,wBAAwB;QAChC,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,0DAA0D;QAChE,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;GAEW,aAAa,CAqEzB;SArEY,aAAa","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n\ndeclare var window: any;\n\nexport interface ThreeDeeTouchQuickAction {\n\n  /**\n   * Type that can be used in the onHomeIconPressed callback\n   */\n  type?: string;\n\n  /**\n   * Title\n   */\n  title: string;\n\n  /**\n   * Subtitle\n   */\n  subtitle?: string;\n\n  /**\n   * Icon type. Case insensitive\n   */\n  iconType?: string;\n\n  /**\n   * Icon template\n   */\n  iconTemplate?: string;\n\n}\n\nexport interface ThreeDeeTouchForceTouch {\n\n  /**\n   * Touch force\n   */\n  force: number;\n\n  /**\n   * Timestamp of action\n   */\n  timestamp: number;\n\n  /**\n   * X coordinate of action\n   */\n  x: number;\n\n  /**\n   * Y coordinate of action\n   */\n  y: number;\n\n}\n\n/**\n * @name 3D Touch\n * @description\n * @usage\n * Please do refer to the original plugin's repo for detailed usage. The usage example here might not be sufficient.\n * ```typescript\n * import { ThreeDeeTouch, ThreeDeeTouchQuickAction, ThreeDeeTouchForceTouch } from '@ionic-native/three-dee-touch';\n *\n * constructor(private threeDeeTouch: ThreeDeeTouch) { }\n *\n * ...\n *\n * this.threeDeeTouch.isAvailable().then(isAvailable => console.log('3D Touch available? ' + isAvailable));\n *\n * this.threeDeeTouch.watchForceTouches()\n *   .subscribe(\n *     (data: ThreeDeeTouchForceTouch) => {\n *       console.log('Force touch %' + data.force);\n *       console.log('Force touch timestamp: ' + data.timestamp);\n *       console.log('Force touch x: ' + data.x);\n *       console.log('Force touch y: ' + data.y);\n *     }\n *   );\n *\n *\n * let actions: Array<ThreeDeeTouchQuickAction> = [\n *   {\n *     type: 'checkin',\n *     title: 'Check in',\n *     subtitle: 'Quickly check in',\n *     iconType: 'Compose'\n *   },\n *   {\n *     type: 'share',\n *     title: 'Share',\n *     subtitle: 'Share like you care',\n *     iconType: 'Share'\n *   },\n *   {\n *     type: 'search',\n *     title: 'Search',\n *     iconType: 'Search'\n *   },\n *   {\n *     title: 'Show favorites',\n *     iconTemplate: 'HeartTemplate'\n *   }\n * ];\n *\n * this.threeDeeTouch.configureQuickActions(actions);\n *\n * this.threeDeeTouch.onHomeIconPressed().subscribe(\n *  (payload) => {\n *    // returns an object that is the button you presed\n *    console.log('Pressed the ${payload.title} button')\n *    console.log(payload.type)\n *\n *  }\n * )\n * ```\n * @interfaces\n * ThreeDeeTouchQuickAction\n * ThreeDeeTouchForceTouch\n */\n@Plugin({\n  pluginName: 'ThreeDeeTouch',\n  plugin: 'cordova-plugin-3dtouch',\n  pluginRef: 'ThreeDeeTouch',\n  repo: 'https://github.com/EddyVerbruggen/cordova-plugin-3dtouch',\n  platforms: ['iOS']\n})\n\nexport class ThreeDeeTouch extends IonicNativePlugin {\n\n  /**\n   * You need an iPhone 6S or some future tech to use the features of this plugin, so you can check at runtime if the user's device is supported.\n   * @returns {Promise<boolean>} returns a promise that resolves with a boolean that indicates whether the plugin is available or not\n   */\n  @Cordova()\n  isAvailable(): Promise<boolean> { return; }\n\n  /**\n   * You can get a notification when the user force touches the webview. The plugin defines a Force Touch when at least 75% of the maximum force is applied to the screen. Your app will receive the x and y coordinates, so you have to figure out which UI element was touched.\n   * @returns {Observable<ThreeDeeTouchForceTouch>} Returns an observable that sends a `ThreeDeeTouchForceTouch` object\n   */\n  @Cordova({\n    observable: true\n  })\n  watchForceTouches(): Observable<ThreeDeeTouchForceTouch> { return; }\n\n  /**\n   * setup the 3D-touch actions, takes an array of objects with the following\n   * @param {string} type (optional) A type that can be used `onHomeIconPressed` callback\n   * @param {string} title Title for your action\n   * @param {string} subtitle (optional) A short description for your action\n   * @param {string} iconType (optional) Choose between Prohibit, Contact, Home, MarkLocation, Favorite, Love, Cloud, Invitation, Confirmation, Mail, Message, Date, Time, CapturePhoto, CaptureVideo, Task, TaskCompleted, Alarm, Bookmark, Shuffle, Audio, Update\n   * @param {string} iconTemplate (optional) Can be used to provide your own icon\n   */\n  @Cordova({\n    sync: true\n  })\n  configureQuickActions(quickActions: Array<ThreeDeeTouchQuickAction>): void { }\n\n  /**\n   * When a home icon is pressed, your app launches and this JS callback is invoked.\n   * @returns {Observable<any>} returns an observable that notifies you when he user presses on the home screen icon\n   */\n  onHomeIconPressed(): Observable<any> {\n    return new Observable(observer => {\n      if (window.ThreeDeeTouch) {\n        window.ThreeDeeTouch.onHomeIconPressed = observer.next.bind(observer);\n      } else {\n        observer.error('3dTouch plugin is not available.');\n        observer.complete();\n      }\n    });\n  }\n\n  /**\n   * Enable Link Preview.\n   * UIWebView and WKWebView (the webviews powering Cordova apps) don't allow the fancy new link preview feature of iOS9.\n   */\n  @Cordova({\n    sync: true\n  })\n  enableLinkPreview(): void { }\n\n  /**\n   * Disabled the link preview feature, if enabled.\n   */\n  @Cordova({\n    sync: true\n  })\n  disableLinkPreview(): void { }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}